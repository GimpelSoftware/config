/* Date Stamp */ -d"_lint_co_lc6_lnt=co-lc6.lnt modified 22-Sep-1997"
/* To document usage use: -message( "Using " _lint_co_lc6_lnt ) */
// ---------------------------------------------------------------------
// This file is provided by Gimpel Software (www.gimpel.com) for use with
// its products PC-lint and FlexeLint.
//
// Redistribution and use of this file, with or without modification, is
// permitted provided that any such redistribution retains this notice.
// ---------------------------------------------------------------------
//    co-lc6.lnt
//    Compiler Options for Lattice 6.00

-clc6

//    This file contains options to allow PC-lint to process source
//    files for your compiler.  It is used as follows:
//
//    lint  co-lc6.lnt  source-file(s)
//

            // while processing compiler (library) header files ...
-wlib(1)    // sets the warning level within library headers to 1
	    // (no warnings, just syntax errors).  Comment out if you
	    // are actually linting library headers.  This
	    // option makes obsolete options of the form -elib(axxx) where
	    // xxx >= 400 which may be retained for historical reasons.
-elib(652)  // suppress message about #define of earlier declared symbols
-elib(762)  // suppress message about multiple identical declarations and
-elib(760)  // suppress message about multiple identical macro defs
-elib(553)  // Suppress the warning that is given when a Lattice-supplied
            // header file contains
            //     #if FAMILY | DOS
            // when, say, FAMILY is not defined.

-$      // establish $ as an identifier character
-e537       // suppress the repeated header file warning.
-dDOS       // one of DOS, FAMILY or OS2 should be defined by the programmer
            // If you prefer. remove this definition and specify one of
            //  -dDOS, -dFAMILY, or -dOS2  on the command line.
-esym(155,fndenv)  // conflict in dos.h vs. stdlib.h
-esym(564,__c)     // ctype.h: __c variable value depends on order of evaluation
-emacro(734,putc)   // don't complain about items being too large.
-emacro(413,offsetof)  // use of NULL pointer creates a stir
-emacro((???),va_arg)   // the va_arg() macro can yield 415, 416, 661, 662
			// 796 and 797 (out-of-bounds errors).

//  The following functions exhibit variable return modes.
//  That is, they may equally-usefully be called for a value
//  as called just for their effects.  Accordingly we inhibit
//  Warning 534 for these functions.
//  Feel free to add to or subtract from this list.

-esym(534,close,creat,fclose,fprintf,fputc)
-esym(534,fputs,fscanf,fseek,fwrite,lseek,memcpy,memmove,memset)
-esym(534,printf,puts,scanf,sprintf,sscanf,strcat,strcpy)
-esym(534,strncat,strncpy,unlink,write)

