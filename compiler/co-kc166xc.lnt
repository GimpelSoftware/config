/* Date Stamp */ -d"_lint_co_kc166xc_lnt=co-kc166xc.lnt modified 13-Jun-2013"
/* To document usage use: -message( "Using " _lint_co_kc166xc_lnt ) */
// ---------------------------------------------------------------------
// This file is provided by Gimpel Software (www.gimpel.com) for use with
// its products PC-lint and FlexeLint.
//
// Redistribution and use of this file, with or without modification, is
// permitted provided that any such redistribution retains this notice.
// ---------------------------------------------------------------------
//============================================================================================
//    co-kc166xc.lnt           -    adaption of the original co-kc166.lnt
//--------------------------------------------------------------------------------------------
//    Compiler Options for the Keil C166 Compiler Version 4
//
//    This file contains options to allow PC-lint to process source
//    files for your compiler.
//    PC-lint can be easy setup inside the µVision2 IDE
//
//    !!!   This files is modified for using with the XC16x devices only    !!!
//          Format options are taken from the original file
//
//    To be confirm with symbolic names of register, all names are
//    taken from the KEIL 'XC16x.H' header file as it is shipped with
//          µVision2   V2.38a
//          C166       V4.27
//
//    Please have an additional look at the end of this file !!
//============================================================================================
//    Stefan Fricke                                    RUTRONIK GmbH
//    FAE Microcontroller
//    Technical support / Development tools
//--------------------------------------------------------------------------------------------
-hsb_3           // formatting options required for MicroVision IDE
-format="*** LINT: %(%f(%l) %)%t %n: %m"
-width(0,10)     // Don't break lines

            // while processing compiler (library) header files ...
-wlib(1)    // sets the warning level within library headers to 1
            // (no warnings, just syntax errors).  Comment out if you
            // are actually linting library headers.  This
            // option makes obsolete options of the form -elib(axxx) where
            // xxx >= 400 which may be retained for historical reasons.
+v

-elib(652)  // suppress message about #define of earlier declared symbols
-elib(762)  // suppress message about multiple identical declarations and
-elib(760)  // suppress message about multiple identical macro defs
+rw(_bit)                 // activate the _bit datatype
+rw(bool)                 // activate the bool datatype
-dbit=bool                // #define bit as bool
+rw(_gobble)              // activate the _gobble keyword
                          // causes _gobble token to be both ignored
-dinterrupt=_gobble       // defines interrupt to be a _gobble
-dusing=_gobble           // defines using to be a _gobble
+rw(_ignore_init)         // activate this keyword
+rw(__declspec)           // activate this MS keyword
-d"sbit=__declspec(selectany) bool"     // 'selectany' has the effect of ...
-d"sfr=__declspec(selectany) unsigned int"  // allowing multiple definitions

-e34    // ignore complaints about non-constant initializers.
        // this is because of things like:
        // sbit  ResetClock = P3^3;
-e430   // ignore complaints about @ mask for function definitions.
-e557   // ignore complaints about not recognizing printf formats
-sp4    // size of pointer is 4 bytes

+rw(sdata,bdata,idata,huge,xhuge)
+rw(tiny,small,compact,medium,large)
//-dlarge=far     // treat large as far
//-dsmall=near    // treat small as near
+d__MODEL__=0     // set memory model to small
+d__C166__=260    // set C166 compiler version to 2.60
+d__DATE__="09/05/95" // set C166 compiler date macro
+d__TIME__="11:55:00" // set C166 compiler time macro
+d__FILE__="MYFILE.C" // set C166 compiler file macro
+d__LINE__=100        // set C166 compiler line macro
+d__STDC__=1          // set C166 compiler STDC macro
//--------------------------------------------------------------------------------------------
//    Following symbolnames added
//--------------------------------------------------------------------------------------------
//+----------------+
//|   ADC module   |
//+----------------+
-esym(14,ADC_CTR2,ADC_CTR2IN,ADC_DAT2,ADC_DAT,ADC_ID,ADC_CON)
-esym(14,ADC_CON_ADST,ADC_CON_ADBSY,ADC_CON_ADWR,ADC_CON_ADCIN)
-esym(14,ADC_CON_ADCRQ,ADC_CON1,ADC_CON1_RES,ADC_CON1_CAL)
-esym(14,ADC_CON1_SAMPLE,ADC_CON1_ICST,ADC_CTR0,ADC_CTR0_ADST)
-esym(14,ADC_CTR0_ADBSY,ADC_CTR0_ADWR,ADC_CTR0_ADCIN,ADC_CTR0_ADCRQ)
-esym(14,ADC_CTR0_SAMPLE,ADC_CTR0_MD)
//+-----------------+
//|   ASC0 module   |
//+-----------------+
-esym(14,ASC0_ABSTAT,ASC0_FSTAT,ASC0_TXFCON,ASC0_RXFCON)
-esym(14,ASC0_ABCON,ASC0_ABCON_ABEN,ASC0_ABCON_AUREN,ASC0_ABCON_ABSTEN)
-esym(14,ASC0_ABCON_ABDETEN,ASC0_ABCON_FCDETEN,ASC0_ABCON_TXINV,ASC0_ABCON_RXINV)
-esym(14,ASC0_PMW,ASC0_TBUF,ASC0_RBUF,ASC0_BG)
-esym(14,ASC0_FDV,ASC0_CON,ASC0_CON_STP,ASC0_CON_REN)
-esym(14,ASC0_CON_PEN_RXDI,ASC0_CON_FEN,ASC0_CON_OEN,ASC0_CON_PE)
-esym(14,ASC0_CON_FE,ASC0_CON_OE,ASC0_CON_S0FDE,ASC0_CON_ODD)
-esym(14,ASC0_CON_BRS,ASC0_CON_LB,ASC0_CON_R,ASC0_ID)
//+----------------+
//|   CC1 module   |
//+----------------+
-esym(14,CC1_IOC,CC1_SEM,CC1_SEE,CC1_T0)
-esym(14,CC1_T1,CC1_T0REL,CC1_T1REL,CC1_CC0)
-esym(14,CC1_CC1,CC1_CC2,CC1_CC3,CC1_CC4)
-esym(14,CC1_CC5,CC1_CC6,CC1_CC7,CC1_CC8)
-esym(14,CC1_CC9,CC1_CC10,CC1_CC11,CC1_CC12)
-esym(14,CC1_CC13,CC1_CC14,CC1_CC15,CC1_T01CON)
-esym(14,CC1_T01CON_T0M,CC1_T01CON_T0R,CC1_T01CON_T1M,CC1_T01CON_T1R)
-esym(14,CC1_M0,CC1_M0_ACC0,CC1_M0_ACC1,CC1_M0_ACC2)
-esym(14,CC1_M0_ACC3,CC1_M1,CC1_M1_ACC4,CC1_M1_ACC5)
-esym(14,CC1_M1_ACC6,CC1_M1_ACC7,CC1_M2,CC1_M2_ACC8)
-esym(14,CC1_M2_ACC9,CC1_M2_ACC10,CC1_M2_ACC11,CC1_M3)
-esym(14,CC1_M3_ACC12,CC1_M3_ACC13,CC1_M3_ACC14,CC1_M3_ACC15)
-esym(14,CC1_DRM,CC1_OUT,CC1_OUT_CC0IO,CC1_OUT_CC1IO)
-esym(14,CC1_OUT_CC2IO,CC1_OUT_CC3IO,CC1_OUT_CC4IO,CC1_OUT_CC5IO)
-esym(14,CC1_OUT_CC6IO,CC1_OUT_CC7IO,CC1_OUT_CC8IO,CC1_OUT_CC9IO)
-esym(14,CC1_OUT_CC10IO,CC1_OUT_CC11IO,CC1_OUT_CC12IO,CC1_OUT_CC13IO)
-esym(14,CC1_OUT_CC14IO,CC1_OUT_CC15IO,CC1_ID)
//+----------------+
//|   CC2 module   |
//+----------------+
-esym(14,CC2_T7,CC2_T8,CC2_T7REL,CC2_T8REL)
-esym(14,CC2_IOC,CC2_SEM,CC2_SEE,CC2_CC16)
-esym(14,CC2_CC17,CC2_CC18,CC2_CC19,CC2_CC20)
-esym(14,CC2_CC21,CC2_CC22,CC2_CC23,CC2_CC24)
-esym(14,CC2_CC25,CC2_CC26,CC2_CC27,CC2_CC28)
-esym(14,CC2_CC29,CC2_CC30,CC2_CC31,CC2_T78CON)
-esym(14,CC2_T78CON_T7M,CC2_T78CON_T7R,CC2_T78CON_T8M,CC2_T78CON_T8R)
-esym(14,CC2_M4,CC2_M4_ACC16,CC2_M4_ACC17,CC2_M4_ACC18)
-esym(14,CC2_M4_ACC19,CC2_M5,CC2_M5_ACC20,CC2_M5_ACC21)
-esym(14,CC2_M5_ACC22,CC2_M5_ACC23,CC2_M6,CC2_M6_ACC24)
-esym(14,CC2_M6_ACC25,CC2_M6_ACC26,CC2_M6_ACC27,CC2_M7)
-esym(14,CC2_M7_ACC28,CC2_M7_ACC29,CC2_M7_ACC30,CC2_M7_ACC31)
-esym(14,CC2_DRM,CC2_OUT,CC2_OUT_CC0IO,CC2_OUT_CC1IO)
-esym(14,CC2_OUT_CC2IO,CC2_OUT_CC3IO,CC2_OUT_CC4IO,CC2_OUT_CC5IO)
-esym(14,CC2_OUT_CC6IO,CC2_OUT_CC7IO,CC2_OUT_CC8IO,CC2_OUT_CC9IO)
-esym(14,CC2_OUT_CC10IO,CC2_OUT_CC11IO,CC2_OUT_CC12IO,CC2_OUT_CC13IO)
-esym(14,CC2_OUT_CC14IO,CC2_OUT_CC15IO,CC2_ID)
//+---------------------+
//|   Cerberus module   |
//+---------------------+
-esym(14,COMDATA)
//+------------------------+
//|   Core related stuff   |
//+------------------------+
-esym(14,CPUID,DPP0,DPP1,DPP2)
-esym(14,DPP3,CSP,MDH,MDL)
-esym(14,CP,SP,STKOV,STKUN)
-esym(14,CPUCON1,CPUCON2,MAL,MAH)
-esym(14,IDX0,IDX1,SPSEG,MDC)
-esym(14,MDC_MDRIU,PSW,PSW_N,PSW_C)
-esym(14,PSW_V,PSW_Z,PSW_E,PSW_MULIP)
-esym(14,PSW_USR0,PSW_USR1,PSW_S1,PSW_IEN)
-esym(14,VECSEG,ZEROS,ONES,MRW)
-esym(14,MCW,MCW_MS,MCW_MP,MSW)
-esym(14,MSW_MN,MSW_MZ,MSW_MC,MSW_MSV)
-esym(14,MSW_ME,MSW_MSL,MSW_MV)
//+------------------+
//|   GPT12 module   |
//+------------------+
-esym(14,GPT12E_T2,GPT12E_T3,GPT12E_T4,GPT12E_T5)
-esym(14,GPT12E_T6,GPT12E_CAPREL,GPT12E_T2CON,GPT12E_T2CON_T2R)
-esym(14,GPT12E_T2CON_T2UD,GPT12E_T2CON_T2UDE,GPT12E_T2CON_T2RC,GPT12E_T2CON_T2IRDIS)
-esym(14,GPT12E_T2CON_T2EDGE,GPT12E_T2CON_T2CHDIR,GPT12E_T2CON_T2RDIR,GPT12E_T3CON)
-esym(14,GPT12E_T3CON_T3R,GPT12E_T3CON_T3UD,GPT12E_T3CON_T3UDE,GPT12E_T3CON_T3OE)
-esym(14,GPT12E_T3CON_T3OTL,GPT12E_T3CON_T3EDGE,GPT12E_T3CON_T3CHDIR,GPT12E_T3CON_T3RDIR)
-esym(14,GPT12E_T4CON,GPT12E_T4CON_T4R,GPT12E_T4CON_T4UD,GPT12E_T4CON_T4UDE)
-esym(14,GPT12E_T4CON_T4RC,GPT12E_T4CON_T4IRDIS,GPT12E_T4CON_T4EDGE,GPT12E_T4CON_T4CHDIR)
-esym(14,GPT12E_T4CON_T4RDIR,GPT12E_T5CON,GPT12E_T5CON_T5R,GPT12E_T5CON_T5UD)
-esym(14,GPT12E_T5CON_T5UDE,GPT12E_T5CON_T5RC,GPT12E_T5CON_CT3,GPT12E_T5CON_T5CC)
-esym(14,GPT12E_T5CON_T5CLR,GPT12E_T5CON_T5SC,GPT12E_T6CON,GPT12E_T6CON_T6R)
-esym(14,GPT12E_T6CON_T6UD,GPT12E_T6CON_T6UDE,GPT12E_T6CON_T6OE,GPT12E_T6CON_T6OTL)
-esym(14,GPT12E_T6CON_T6CLR,GPT12E_T6CON_T6SR,GPT12E_ID)
//+------------------------------+
//|   Interrupt Control module   |
//+------------------------------+
/* IC */
-esym(14,CAN_1IC,CAN_1IC_IE,CAN_1IC_IR,CAN_1IC_GPX)
-esym(14,CAN_2IC,CAN_2IC_IE,CAN_2IC_IR,CAN_2IC_GPX)
-esym(14,CAN_3IC,CAN_3IC_IE,CAN_3IC_IR,CAN_3IC_GPX)
-esym(14,CAN_4IC,CAN_4IC_IE,CAN_4IC_IR,CAN_4IC_GPX)
-esym(14,CAN_5IC,CAN_5IC_IE,CAN_5IC_IR,CAN_5IC_GPX)
-esym(14,CAN_6IC,CAN_6IC_IE,CAN_6IC_IR,CAN_6IC_GPX)
-esym(14,CAN_7IC,CAN_7IC_IE,CAN_7IC_IR,CAN_7IC_GPX)
-esym(14,ASC0_ABIC,ASC0_ABIC_IE,ASC0_ABIC_IR,ASC0_ABIC_GPX)
-esym(14,CC2_CC16IC,CC2_CC16IC_IE,CC2_CC16IC_IR,CC2_CC16IC_GPX)
-esym(14,CC2_CC17IC,CC2_CC17IC_IE,CC2_CC17IC_IR,CC2_CC17IC_GPX)
-esym(14,CC2_CC18IC,CC2_CC18IC_IE,CC2_CC18IC_IR,CC2_CC18IC_GPX)
-esym(14,CC2_CC19IC,CC2_CC19IC_IE,CC2_CC19IC_IR,CC2_CC19IC_GPX)
-esym(14,CC2_CC20IC,CC2_CC20IC_IE,CC2_CC20IC_IR,CC2_CC20IC_GPX)
-esym(14,CC2_CC21IC,CC2_CC21IC_IE,CC2_CC21IC_IR,CC2_CC21IC_GPX)
-esym(14,CC2_CC22IC,CC2_CC22IC_IE,CC2_CC22IC_IR,CC2_CC22IC_GPX)
-esym(14,CC2_CC23IC,CC2_CC23IC_IE,CC2_CC23IC_IR,CC2_CC23IC_GPX)
-esym(14,CC2_CC24IC,CC2_CC24IC_IE,CC2_CC24IC_IR,CC2_CC24IC_GPX)
-esym(14,CC2_CC25IC,CC2_CC25IC_IE,CC2_CC25IC_IR,CC2_CC25IC_GPX)
-esym(14,CC2_CC26IC,CC2_CC26IC_IE,CC2_CC26IC_IR,CC2_CC26IC_GPX)
-esym(14,CC2_CC27IC,CC2_CC27IC_IE,CC2_CC27IC_IR,CC2_CC27IC_GPX)
-esym(14,CC2_CC28IC,CC2_CC28IC_IE,CC2_CC28IC_IR,CC2_CC28IC_GPX)
-esym(14,CC2_T7IC,CC2_T7IC_IE,CC2_T7IC_IR,CC2_T7IC_GPX)
-esym(14,CC2_T8IC,CC2_T8IC_IE,CC2_T8IC_IR,CC2_T8IC_GPX)
-esym(14,EOPIC,EOPIC_IE,EOPIC_IR,EOPIC_GPX)
-esym(14,CC2_CC29IC,CC2_CC29IC_IE,CC2_CC29IC_IR,CC2_CC29IC_GPX)
-esym(14,CC2_CC30IC,CC2_CC30IC_IE,CC2_CC30IC_IR,CC2_CC30IC_GPX)
-esym(14,CC2_CC31IC,CC2_CC31IC_IE,CC2_CC31IC_IR,CC2_CC31IC_GPX)
-esym(14,CAN_0IC,CAN_0IC_IE,CAN_0IC_IR,CAN_0IC_GPX)
-esym(14,SDLM_IC,SDLM_IC_IE,SDLM_IC_IR,SDLM_IC_GPX)
-esym(14,ASC0_TBIC,ASC0_TBIC_IE,ASC0_TBIC_IR,ASC0_TBIC_GPX)
-esym(14,PLLIC,PLLIC_PLL,PLLIC_IR,PLLIC_GPX)
-esym(14,RTC_IC,RTC_IC_IE,RTC_IC_IR,RTC_IC_GPX)
-esym(14,SSC1_TIC,SSC1_TIC_IE,SSC1_TIC_IR,SSC1_TIC_GPX)
-esym(14,SSC1_RIC,SSC1_RIC_IE,SSC1_RIC_IR,SSC1_RIC_GPX)
-esym(14,SSC1_EIC,SSC1_EIC_IE,SSC1_EIC_IR,SSC1_EIC_GPX)
-esym(14,EXICON)
-esym(14,GPT12E_T2IC,GPT12E_T2IC_IE,GPT12E_T2IC_IR,GPT12E_T2IC_GPX)
-esym(14,GPT12E_T3IC,GPT12E_T3IC_IE,GPT12E_T3IC_IR,GPT12E_T3IC_GPX)
-esym(14,GPT12E_T4IC,GPT12E_T4IC_IE,GPT12E_T4IC_IR,GPT12E_T4IC_GPX)
-esym(14,GPT12E_T5IC,GPT12E_T5IC_IE,GPT12E_T5IC_IR,GPT12E_T5IC_GPX)
-esym(14,GPT12E_T6IC,GPT12E_T6IC_IE,GPT12E_T6IC_IR,GPT12E_T6IC_GPX)
-esym(14,GPT12E_CRIC,GPT12E_CRIC_IE,GPT12E_CRIC_IR,GPT12E_CRIC_GPX)
-esym(14,ASC0_TIC,ASC0_TIC_IE,ASC0_TIC_IR,ASC0_TIC_GPX)
-esym(14,ASC0_RIC,ASC0_RIC_IE,ASC0_RIC_IR,ASC0_RIC_GPX)
-esym(14,ASC0_EIC,ASC0_EIC_IE,ASC0_EIC_IR,ASC0_EIC_GPX)
-esym(14,SSC0_TIC,SSC0_TIC_IE,SSC0_TIC_IR,SSC0_TIC_GPX)
-esym(14,SSC0_RIC,SSC0_RIC_IE,SSC0_RIC_IR,SSC0_RIC_GPX)
-esym(14,SSC0_EIC,SSC0_EIC_IE,SSC0_EIC_IR,SSC0_EIC_GPX)
-esym(14,CC1_CC0IC,CC1_CC0IC_IE,CC1_CC0IC_IR,CC1_CC0IC_GPX)
-esym(14,CC1_CC1IC,CC1_CC1IC_IE,CC1_CC1IC_IR,CC1_CC1IC_GPX)
-esym(14,CC1_CC2IC,CC1_CC2IC_IE,CC1_CC2IC_IR,CC1_CC2IC_GPX)
-esym(14,CC1_CC3IC,CC1_CC3IC_IE,CC1_CC3IC_IR,CC1_CC3IC_GPX)
-esym(14,CC1_CC4IC,CC1_CC4IC_IE,CC1_CC4IC_IR,CC1_CC4IC_GPX)
-esym(14,CC1_CC5IC,CC1_CC5IC_IE,CC1_CC5IC_IR,CC1_CC5IC_GPX)
-esym(14,CC1_CC6IC,CC1_CC6IC_IE,CC1_CC6IC_IR,CC1_CC6IC_GPX)
-esym(14,CC1_CC7IC,CC1_CC7IC_IE,CC1_CC7IC_IR,CC1_CC7IC_GPX)
-esym(14,CC1_CC8IC,CC1_CC8IC_IE,CC1_CC8IC_IR,CC1_CC8IC_GPX)
-esym(14,CC1_CC9IC,CC1_CC9IC_IE,CC1_CC9IC_IR,CC1_CC9IC_GPX)
-esym(14,CC1_CC10IC,CC1_CC10IC_IE,CC1_CC10IC_IR,CC1_CC10IC_GPX)
-esym(14,CC1_CC11IC,CC1_CC11IC_IE,CC1_CC11IC_IR,CC1_CC11IC_GPX)
-esym(14,CC1_CC12IC,CC1_CC12IC_IE,CC1_CC12IC_IR,CC1_CC12IC_GPX)
-esym(14,CC1_CC13IC,CC1_CC13IC_IE,CC1_CC13IC_IR,CC1_CC13IC_GPX)
-esym(14,CC1_CC14IC,CC1_CC14IC_IE,CC1_CC14IC_IR,CC1_CC14IC_GPX)
-esym(14,CC1_CC15IC,CC1_CC15IC_IE,CC1_CC15IC_IR,CC1_CC15IC_GPX)
-esym(14,ADC_CIC,ADC_CIC_IE,ADC_CIC_IR,ADC_CIC_GPX)
-esym(14,ADC_EIC,ADC_EIC_IE,ADC_EIC_IR,ADC_EIC_GPX)
-esym(14,CC1_T0IC,CC1_T0IC_IE,CC1_T0IC_IR,CC1_T0IC_GPX)
-esym(14,CC1_T1IC,CC1_T1IC_IE,CC1_T1IC_IR,CC1_T1IC_GPX)
//+----------------+
//|   LONDONCORE   |
//+----------------+
-esym(14,TFR,TFR_ILLOPA,TFR_PRTFLT,TFR_PACER,TFR_UNDOPC)
-esym(14,TFR_SOFTBRK,TFR_STKUF,TFR_STKOF,TFR_NMI)
//+--------------+
//|   MAC unit   |
//+--------------+
-esym(14,QX0,QX1,QR0,QR1)
//+-----------------------+
//|   PEC transfer unit   |
//+-----------------------+
-esym(14,PECC0,PECC1,PECC2,PECC3)
-esym(14,PECC4,PECC5,PECC6,PECC7)
-esym(14,PECISNC)
-esym(14,PECISNC_C0IE,PECISNC_C0IR,PECISNC_C1IE,PECISNC_C1IR)
-esym(14,PECISNC_C2IE,PECISNC_C2IR,PECISNC_C3IE,PECISNC_C3IR)
-esym(14,PECISNC_C4IE,PECISNC_C4IR,PECISNC_C5IE,PECISNC_C5IR)
-esym(14,PECISNC_C6IE,PECISNC_C6IR,PECISNC_C7IE,PECISNC_C7IR)
//+-----------+
//|   PORTS   |
//+-----------+
-esym(14,POCON0L,POCON0H,POCON1L,POCON1H,POCON3,POCON4,POCON9,POCON20)
-esym(14,DP0L,DP0L_P0,DP0L_P1,DP0L_P2,DP0L_P3,DP0L_P4,DP0L_P5,DP0L_P6,DP0L_P7)
-esym(14,DP0H,DP0H_P0,DP0H_P1,DP0H_P2,DP0H_P3,DP0H_P4,DP0H_P5,DP0H_P6,DP0H_P7)
-esym(14,DP1L,DP1L_P0,DP1L_P1,DP1L_P2,DP1L_P3,DP1L_P4,DP1L_P5,DP1L_P6,DP1L_P7)
-esym(14,DP1H,DP1H_P0,DP1H_P1,DP1H_P2,DP1H_P3,DP1H_P4,DP1H_P5,DP1H_P6,DP1H_P7)
-esym(14,ALTSEL0P1H,ALTSEL0P1H_P0,ALTSEL0P1H_P1,ALTSEL0P1H_P2,ALTSEL0P1H_P3)
-esym(14,ALTSEL0P1H_P4,ALTSEL0P1H_P5,ALTSEL0P1H_P6,ALTSEL0P1H_P7)
-esym(14,ALTSEL0P3,ALTSEL0P3_P1,ALTSEL0P3_P3,ALTSEL0P3_P8,ALTSEL0P3_P9)
-esym(14,ALTSEL0P3_P10,ALTSEL0P3_P11,ALTSEL0P3_P13)
-esym(14,ALTSEL1P3,ALTSEL1P3_P1)
-esym(14,ALTSEL0P4,ALTSEL0P4_P6,ALTSEL0P4_P7)
-esym(14,ALTSEL0P1L,ALTSEL0P1L_P0,ALTSEL0P1L_P1,ALTSEL0P1L_P2,ALTSEL0P1L_P3)
-esym(14,ALTSEL0P1L_P4,ALTSEL0P1L_P5,ALTSEL0P1L_P6,ALTSEL0P1L_P7)
-esym(14,ALTSEL1P4,ALTSEL1P4_P7)
-esym(14,ALTSEL0P9,ALTSEL0P9_P0,ALTSEL0P9_P1,ALTSEL0P9_P2,ALTSEL0P9_P3)
-esym(14,ALTSEL0P9_P4,ALTSEL0P9_P5)
-esym(14,ALTSEL1P9,ALTSEL1P9_P0,ALTSEL1P9_P1,ALTSEL1P9_P2,ALTSEL1P9_P3)
-esym(14,ALTSEL1P9_P4,ALTSEL1P9_P5)
-esym(14,PICON,PICON_P3LIN,PICON_P3HIN,PICON_P4LIN,PICON_P9LIN,PICON_P20LIN,PICON_P20HIN)
-esym(14,ODP3,ODP3_P0,ODP3_P1,ODP3_P2,ODP3_P3,ODP3_P4,ODP3_P5,ODP3_P6,ODP3_P7)
-esym(14,ODP3_P8,ODP3_P9,ODP3_P10,ODP3_P11,ODP3_P13)
-esym(14,ODP4,ODP4_P0,ODP4_P1,ODP4_P2,ODP4_P3,ODP4_P4,ODP4_P5,ODP4_P6,ODP4_P7)
-esym(14,P0L,P0L_P0,P0L_P1,P0L_P2,P0L_P3,P0L_P4,P0L_P5,P0L_P6,P0L_P7)
-esym(14,P0H,P0H_P0,P0H_P1,P0H_P2,P0H_P3,P0H_P4,P0H_P5,P0H_P6,P0H_P7)
-esym(14,P1L,P1L_P0,P1L_P1,P1L_P2,P1L_P3,P1L_P4,P1L_P5,P1L_P6,P1L_P7)
-esym(14,P1H,P1H_P0,P1H_P1,P1H_P2,P1H_P3,P1H_P4,P1H_P5,P1H_P6,P1H_P7)
-esym(14,P9,P9_P0,P9_P1,P9_P2,P9_P3,P9_P4,P9_P5)
-esym(14,DP9,DP9_P0,DP9_P1,DP9_P2,DP9_P3,DP9_P4,DP9_P5)
-esym(14,ODP9,ODP9_P0,ODP9_P1,ODP9_P2,ODP9_P3,ODP9_P4,ODP9_P5)
-esym(14,P5,P5_P0,P5_P1,P5_P2,P5_P3,P5_P4,P5_P5,P5_P6,P5_P7)
-esym(14,P5_P10,P5_P11,P5_P12,P5_P13,P5_P14,P5_P15)
-esym(14,P5DIDIS,P5DIDIS_P0,P5DIDIS_P1,P5DIDIS_P2,P5DIDIS_P3,P5DIDIS_P4)
-esym(14,P5DIDIS_P5,P5DIDIS_P6,P5DIDIS_P7)
-esym(14,P5DIDIS_P10,P5DIDIS_P11,P5DIDIS_P12,P5DIDIS_P13,P5DIDIS_P14,P5DIDIS_P15)
-esym(14,P20,P20_P0,P20_P1,P20_P4,P20_P5,P20_P12)
-esym(14,DP20,DP20_P0,DP20_P1,DP20_P4,DP20_P5,DP20_P12)
-esym(14,P3,P3_P1,P3_P2,P3_P3,P3_P4,P3_P5,P3_P6,P3_P7)
-esym(14,P3_P8,P3_P9,P3_P10,P3_P11,P3_P12,P3_P13,P3_P15)
-esym(14,DP3,DP3_P0,DP3_P1,DP3_P2,DP3_P3,DP3_P4,DP3_P5,DP3_P6,DP3_P7)
-esym(14,DP3_P8,DP3_P9,DP3_P10,DP3_P11,DP3_P12,DP3_P13,DP3_P14,DP3_P15)
-esym(14,P4,P4_P0,P4_P1,P4_P2,P4_P3,P4_P4,P4_P5,P4_P6,P4_P7)
-esym(14,DP4,DP4_P0,DP4_P1,DP4_P2,DP4_P3,DP4_P4,DP4_P5,DP4_P6,DP4_P7)
//+----------------+
//|   RTC module   |
//+----------------+
-esym(14,RTC_RELL,RTC_RELH,RTC_T14REL,RTC_T14,RTC_RTCL,RTC_RTCH)
-esym(14,RTC_ISNC,RTC_ISNC_T14IE,RTC_ISNC_T14IR)
-esym(14,RTC_ISNC_CNT0IE,RTC_ISNC_CNT0IR,RTC_ISNC_CNT1IE,RTC_ISNC_CNT1IR)
-esym(14,RTC_ISNC_CNT2IE,RTC_ISNC_CNT2IR,RTC_ISNC_CNT3IE,RTC_ISNC_CNT3IR)
-esym(14,RTC_CON,RTC_CON_RUN,RTC_CON_PRE,RTC_CON_T14DEC)
-esym(14,RTC_CON_T14INC,RTC_CON_REFCLK,RTC_CON_ACCPOS)
-esym(14,RTC_ID)
//+---------+
//|   SCU   |
//+---------+
-esym(14,IDRT,IDMEM2,IDPROG,IDMEM,IDCHIP,IDMANUF)
-esym(14,SCUSLC,SCUSLS,IMBCTR)
-esym(14,RSTCFG,RSTCFG_ROC,RSTCFG_ADP,RSTCFG_WRC)
-esym(14,SYSCON0,SYSCON0_RTCCM,SYSCON0_RTCRST,PLLCON,PLLCON_PLLCSF)
-esym(14,SYSCON3,SYSCON3_ADCDIS,SYSCON3_ASC0DIS,SYSCON3_SSC0DIS)
-esym(14,SYSCON3_GPTDIS,SYSCON3_PFMDIS,SYSCON3_CC1DIS,SYSCON3_CC2DIS)
-esym(14,SYSCON3_CC6DIS,SYSCON3_CANDIS,SYSCON3_SSC1DIS)
-esym(14,EXISEL1,EXISEL0,SYSCON1,RSTCON,RSTCON2,SYSSTAT,OPSEN)
-esym(14,FOCON,FOCON_FOTL,FOCON_CLKEN,FOCON_FOSS,FOCON_FOEN,WDTCON)
//+-----------------+
//|   SSC0 module   |
//+-----------------+
-esym(14,SSC0_TB,SSC0_RB,SSC0_BR)
-esym(14,SSC0_CON,SSC0_CON_HB,SSC0_CON_PH,SSC0_CON_PO)
-esym(14,SSC0_CON_LB,SSC0_CON_TEN,SSC0_CON_REN,SSC0_CON_PEN)
-esym(14,SSC0_CON_BEN,SSC0_CON_AREN,SSC0_CON_MS,SSC0_CON_EN,SSC0_ID)
//+-----------------+
//|   SSC1 module   |
//+-----------------+
-esym(14,SSC1_TB,SSC1_RB,SSC1_BR)
-esym(14,SSC1_CON,SSC1_CON_HB,SSC1_CON_PH,SSC1_CON_PO)
-esym(14,SSC1_CON_LB,SSC1_CON_TEN,SSC1_CON_REN,SSC1_CON_PEN)
-esym(14,SSC1_CON_BEN,SSC1_CON_AREN,SSC1_CON_MS,SSC1_CON_EN,SSC1_ID)
//+---------+
//|   WTD   |
//+---------+
-esym(14,WDT)
//+---------------------+
//|   Twin CAN module   |
//+---------------------+
-esym(14,CAN_PISEL,CAN_ID,CAN_ACR,CAN_ASR,CAN_AIR,CAN_ABTRL,CAN_ABTRH,CAN_AGINP,CAN_AFCRL,CAN_AFCRH,CAN_AIMRL0,CAN_AIMRH0,CAN_AIMR4,CAN_AECNTL,CAN_AECNTH,CAN_BCR,CAN_BSR,CAN_BIR)
-esym(14,CAN_BBTRL,CAN_BBTRH,CAN_BGINP,CAN_BFCRL,CAN_BFCRH,CAN_BIMRL0,CAN_BIMRH0,CAN_BIMR4,CAN_BECNTL,CAN_BECNTH,CAN_RXIPNDL,CAN_RXIPNDH,CAN_TXIPNDL,CAN_TXIPNDH,CAN_MSGDRL00,CAN_MSGDRH00,CAN_MSGDRL04)
-esym(14,CAN_MSGDRH04,CAN_MSGARL0,CAN_MSGARH0,CAN_MSGAMRL0,CAN_MSGAMRH0,CAN_MSGCTRL0,CAN_MSGCTRH0,CAN_MSGCFGL0,CAN_MSGCFGH0,CAN_MSGFGCRL0,CAN_MSGFGCRH0,CAN_MSGDRL10,CAN_MSGDRH10,CAN_MSGDRL14,CAN_MSGDRH14)
-esym(14,CAN_MSGARL1,CAN_MSGARH1,CAN_MSGAMRL1,CAN_MSGAMRH1,CAN_MSGCTRL1,CAN_MSGCTRH1,CAN_MSGCFGL1,CAN_MSGCFGH1,CAN_MSGFGCRL1,CAN_MSGFGCRH1)
-esym(14,CAN_MSGDRL20,CAN_MSGDRH20,CAN_MSGDRL24,CAN_MSGDRH24,CAN_MSGARL2,CAN_MSGARH2,CAN_MSGAMRL2,CAN_MSGAMRH2,CAN_MSGCTRL2,CAN_MSGCTRH2,CAN_MSGCFGL2,CAN_MSGCFGH2,CAN_MSGFGCRL2,CAN_MSGFGCRH2,CAN_MSGDRL30)
-esym(14,CAN_MSGDRH30,CAN_MSGDRL34,CAN_MSGDRH34,CAN_MSGARL3,CAN_MSGARH3,CAN_MSGAMRL3,CAN_MSGAMRH3,CAN_MSGCTRL3,CAN_MSGCTRH3,CAN_MSGCFGL3,CAN_MSGCFGH3,CAN_MSGFGCRL3,CAN_MSGFGCRH3,CAN_MSGDRL40,CAN_MSGDRH40)
-esym(14,CAN_MSGDRL44,CAN_MSGDRH44,CAN_MSGARL4,CAN_MSGARH4,CAN_MSGAMRL4,CAN_MSGAMRH4,CAN_MSGCTRL4,CAN_MSGCTRH4,CAN_MSGCFGL4,CAN_MSGCFGH4,CAN_MSGFGCRL4,CAN_MSGFGCRH4)
-esym(14,CAN_MSGDRL50,CAN_MSGDRH50,CAN_MSGDRL54,CAN_MSGDRH54,CAN_MSGARL5,CAN_MSGARH5,CAN_MSGAMRL5,CAN_MSGAMRH5,CAN_MSGCTRL5,CAN_MSGCTRH5,CAN_MSGCFGL5,CAN_MSGCFGH5,CAN_MSGFGCRL5,CAN_MSGFGCRH5,CAN_MSGDRL60)
-esym(14,CAN_MSGDRH60,CAN_MSGDRL64,CAN_MSGDRH64,CAN_MSGARL6,CAN_MSGARH6,CAN_MSGAMRL6,CAN_MSGAMRH6,CAN_MSGCTRL6,CAN_MSGCTRH6,CAN_MSGCFGL6,CAN_MSGCFGH6,CAN_MSGFGCRL6,CAN_MSGFGCRH6,CAN_MSGDRL70,CAN_MSGDRH70)
-esym(14,CAN_MSGDRL74,CAN_MSGDRH74,CAN_MSGARL7,CAN_MSGARH7,CAN_MSGAMRL7,CAN_MSGAMRH7,CAN_MSGCTRL7,CAN_MSGCTRH7,CAN_MSGCFGL7,CAN_MSGCFGH7,CAN_MSGFGCRL7,CAN_MSGFGCRH7,CAN_MSGDRL80,CAN_MSGDRH80,CAN_MSGDRL84)
-esym(14,CAN_MSGDRH84,CAN_MSGARL8,CAN_MSGARH8,CAN_MSGAMRL8,CAN_MSGAMRH8,CAN_MSGCTRL8,CAN_MSGCTRH8,CAN_MSGCFGL8,CAN_MSGCFGH8,CAN_MSGFGCRL8,CAN_MSGFGCRH8)
-esym(14,CAN_MSGDRL90,CAN_MSGDRH90,CAN_MSGDRL94,CAN_MSGDRH94,CAN_MSGARL9,CAN_MSGARH9,CAN_MSGAMRL9,CAN_MSGAMRH9,CAN_MSGCTRL9,CAN_MSGCTRH9,CAN_MSGCFGL9,CAN_MSGCFGH9,CAN_MSGFGCRL9,CAN_MSGFGCRH9,CAN_MSGDRL100)
-esym(14,CAN_MSGDRH100,CAN_MSGDRL104,CAN_MSGDRH104,CAN_MSGARL10,CAN_MSGARH10,CAN_MSGAMRL10,CAN_MSGAMRH10,CAN_MSGCTRL10,CAN_MSGCTRH10,CAN_MSGCFGL10,CAN_MSGCFGH10,CAN_MSGFGCRL10,CAN_MSGFGCRH10,CAN_MSGDRL110,CAN_MSGDRH110,CAN_MSGDRL114,CAN_MSGDRH114,CAN_MSGARL11,CAN_MSGARH11,CAN_MSGAMRL11,CAN_MSGAMRH11,CAN_MSGCTRL11,CAN_MSGCTRH11,CAN_MSGCFGL11,CAN_MSGCFGH11,CAN_MSGFGCRL11)
-esym(14,CAN_MSGFGCRH11,CAN_MSGDRL120,CAN_MSGDRH120,CAN_MSGDRL124,CAN_MSGDRH124,CAN_MSGARL12,CAN_MSGARH12)
-esym(14,CAN_MSGAMRL12,CAN_MSGAMRH12,CAN_MSGCTRL12,CAN_MSGCTRH12,CAN_MSGCFGL12,CAN_MSGCFGH12,CAN_MSGFGCRL12,CAN_MSGFGCRH12)
-esym(14,CAN_MSGDRL130,CAN_MSGDRH130,CAN_MSGDRL134,CAN_MSGDRH134,CAN_MSGARL13,CAN_MSGARH13,CAN_MSGAMRL13)
-esym(14,CAN_MSGAMRH13,CAN_MSGCTRL13,CAN_MSGCTRH13,CAN_MSGCFGL13,CAN_MSGCFGH13,CAN_MSGFGCRL13,CAN_MSGFGCRH13)
-esym(14,CAN_MSGDRL140,CAN_MSGDRH140,CAN_MSGDRL144,CAN_MSGDRH144,CAN_MSGARL14,CAN_MSGARH14,CAN_MSGAMRL14,CAN_MSGAMRH14)
-esym(14,CAN_MSGCTRL14,CAN_MSGCTRH14,CAN_MSGCFGL14,CAN_MSGCFGH14,CAN_MSGFGCRL14,CAN_MSGFGCRH14)
-esym(14,CAN_MSGDRL150,CAN_MSGDRH150,CAN_MSGDRL154,CAN_MSGDRH154,CAN_MSGARL15,CAN_MSGARH15)
-esym(14,CAN_MSGAMRL15,CAN_MSGAMRH15,CAN_MSGCTRL15,CAN_MSGCTRH15,CAN_MSGCFGL15,CAN_MSGCFGH15)
-esym(14,CAN_MSGFGCRL15,CAN_MSGFGCRH15,CAN_MSGDRL160,CAN_MSGDRH160,CAN_MSGDRL164,CAN_MSGDRH164,CAN_MSGARL16)
-esym(14,CAN_MSGARH16,CAN_MSGAMRL16,CAN_MSGAMRH16,CAN_MSGCTRL16,CAN_MSGCTRH16,CAN_MSGCFGL16)
-esym(14,CAN_MSGCFGH16,CAN_MSGFGCRL16,CAN_MSGFGCRH16,CAN_MSGDRL170,CAN_MSGDRH170,CAN_MSGDRL174)
-esym(14,CAN_MSGDRH174,CAN_MSGARL17,CAN_MSGARH17,CAN_MSGAMRL17,CAN_MSGAMRH17,CAN_MSGCTRL17,CAN_MSGCTRH17)
-esym(14,CAN_MSGCFGL17,CAN_MSGCFGH17,CAN_MSGFGCRL17,CAN_MSGFGCRH17,CAN_MSGDRL180,CAN_MSGDRH180)
-esym(14,CAN_MSGDRL184,CAN_MSGDRH184,CAN_MSGARL18,CAN_MSGARH18,CAN_MSGAMRL18,CAN_MSGAMRH18)
-esym(14,CAN_MSGCTRL18,CAN_MSGCTRH18,CAN_MSGCFGL18,CAN_MSGCFGH18,CAN_MSGFGCRL18,CAN_MSGFGCRH18)
-esym(14,CAN_MSGDRL190,CAN_MSGDRH190,CAN_MSGDRL194,CAN_MSGDRH194,CAN_MSGARL19,CAN_MSGARH19)
-esym(14,CAN_MSGAMRL19,CAN_MSGAMRH19,CAN_MSGCTRL19,CAN_MSGCTRH19,CAN_MSGCFGL19,CAN_MSGCFGH19)
-esym(14,CAN_MSGFGCRL19,CAN_MSGFGCRH19,CAN_MSGDRL200,CAN_MSGDRH200,CAN_MSGDRL204,CAN_MSGDRH204)
-esym(14,CAN_MSGARL20,CAN_MSGARH20,CAN_MSGAMRL20,CAN_MSGAMRH20,CAN_MSGCTRL20,CAN_MSGCTRH20,CAN_MSGCFGL20)
-esym(14,CAN_MSGCFGH20,CAN_MSGFGCRL20,CAN_MSGFGCRH20,CAN_MSGDRL210,CAN_MSGDRH210,CAN_MSGDRL214)
-esym(14,CAN_MSGDRH214,CAN_MSGARL21,CAN_MSGARH21,CAN_MSGAMRL21,CAN_MSGAMRH21,CAN_MSGCTRL21)
-esym(14,CAN_MSGCTRH21,CAN_MSGCFGL21,CAN_MSGCFGH21,CAN_MSGFGCRL21,CAN_MSGFGCRH21)
-esym(14,CAN_MSGDRL220,CAN_MSGDRH220,CAN_MSGDRL224,CAN_MSGDRH224,CAN_MSGARL22)
-esym(14,CAN_MSGARH22,CAN_MSGAMRL22,CAN_MSGAMRH22,CAN_MSGCTRL22,CAN_MSGCTRH22)
-esym(14,CAN_MSGCFGL22,CAN_MSGCFGH22,CAN_MSGFGCRL22,CAN_MSGFGCRH22,CAN_MSGDRL230)
-esym(14,CAN_MSGDRH230,CAN_MSGDRL234,CAN_MSGDRH234,CAN_MSGARL23,CAN_MSGARH23,CAN_MSGAMRL23)
-esym(14,CAN_MSGAMRH23,CAN_MSGCTRL23,CAN_MSGCTRH23,CAN_MSGCFGL23,CAN_MSGCFGH23,CAN_MSGFGCRL23)
-esym(14,CAN_MSGFGCRH23,CAN_MSGDRL240,CAN_MSGDRH240,CAN_MSGDRL244,CAN_MSGDRH244,CAN_MSGARL24)
-esym(14,CAN_MSGARH24,CAN_MSGAMRL24,CAN_MSGAMRH24,CAN_MSGCTRL24,CAN_MSGCTRH24,CAN_MSGCFGL24)
-esym(14,CAN_MSGCFGH24,CAN_MSGFGCRL24,CAN_MSGFGCRH24,CAN_MSGDRL250,CAN_MSGDRH250,CAN_MSGDRL254)
-esym(14,CAN_MSGDRH254,CAN_MSGARL25,CAN_MSGARH25,CAN_MSGAMRL25,CAN_MSGAMRH25,CAN_MSGCTRL25)
-esym(14,CAN_MSGCTRH25,CAN_MSGCFGL25,CAN_MSGCFGH25,CAN_MSGFGCRL25,CAN_MSGFGCRH25,CAN_MSGDRL260)
-esym(14,CAN_MSGDRH260,CAN_MSGDRL264,CAN_MSGDRH264,CAN_MSGARL26,CAN_MSGARH26,CAN_MSGAMRL26)
-esym(14,CAN_MSGAMRH26,CAN_MSGCTRL26,CAN_MSGCTRH26,CAN_MSGCFGL26,CAN_MSGCFGH26,CAN_MSGFGCRL26)
-esym(14,CAN_MSGFGCRH26,CAN_MSGDRL270,CAN_MSGDRH270,CAN_MSGDRL274,CAN_MSGDRH274)
-esym(14,CAN_MSGARL27,CAN_MSGARH27,CAN_MSGAMRL27,CAN_MSGAMRH27,CAN_MSGCTRL27,CAN_MSGCTRH27)
-esym(14,CAN_MSGCFGL27,CAN_MSGCFGH27,CAN_MSGFGCRL27,CAN_MSGFGCRH27,CAN_MSGDRL280)
-esym(14,CAN_MSGDRH280,CAN_MSGDRL284,CAN_MSGDRH284,CAN_MSGARL28,CAN_MSGARH28,CAN_MSGAMRL28)
-esym(14,CAN_MSGAMRH28,CAN_MSGCTRL28,CAN_MSGCTRH28,CAN_MSGCFGL28,CAN_MSGCFGH28,CAN_MSGFGCRL28)
-esym(14,CAN_MSGFGCRH28,CAN_MSGDRL290,CAN_MSGDRH290,CAN_MSGDRL294,CAN_MSGDRH294,CAN_MSGARL29)
-esym(14,CAN_MSGARH29,CAN_MSGAMRL29,CAN_MSGAMRH29,CAN_MSGCTRL29,CAN_MSGCTRH29,CAN_MSGCFGL29)
-esym(14,CAN_MSGCFGH29,CAN_MSGFGCRL29,CAN_MSGFGCRH29,CAN_MSGDRL300,CAN_MSGDRH300,CAN_MSGDRL304)
-esym(14,CAN_MSGDRH304,CAN_MSGARL30,CAN_MSGARH30,CAN_MSGAMRL30,CAN_MSGAMRH30,CAN_MSGCTRL30)
-esym(14,CAN_MSGCTRH30,CAN_MSGCFGL30,CAN_MSGCFGH30,CAN_MSGFGCRL30,CAN_MSGFGCRH30,CAN_MSGDRL310)
-esym(14,CAN_MSGDRH310,CAN_MSGDRL314,CAN_MSGDRH314,CAN_MSGARL31,CAN_MSGARH31,CAN_MSGAMRL31)
-esym(14,CAN_MSGAMRH31,CAN_MSGCTRL31,CAN_MSGCTRH31,CAN_MSGCFGL31,CAN_MSGCFGH31,CAN_MSGFGCRL31)
-esym(14,CAN_MSGFGCRH31)
//+---------+
//|   IIC   |
//+---------+
-esym(14,IIC_CFG,IIC_CON,IIC_ST,IIC_ADR,IIC_RTBL,IIC_RTBH,IIC_ID)
//+----------+
//|   SDLM   |
//+----------+
-esym(14,SDLM_PISEL,SDLM_ID,SDLM_GLOBCON,SDLM_CLKDIV,SDLM_TXDELAY,SDLM_IFRVAL)
-esym(14,SDLM_BUFFSTAT,SDLM_TRANSSTAT,SDLM_BUSSTAT,SDLM_ERRSTAT)
-esym(14,SDLM_BUFFCON,SDLM_FLAGRST)
-esym(14,SDLM_INTCON,SDLM_TXD0,SDLM_TXD2,SDLM_TXD4,SDLM_TXD6,SDLM_TXD8,SDLM_TXD10)
-esym(14,SDLM_TXCNT,SDLM_TXCPU)
-esym(14,SDLM_RXD00,SDLM_RXD02,SDLM_RXD04,SDLM_RXD06,SDLM_RXD08,SDLM_RXD010)
-esym(14,SDLM_RXCNT,SDLM_RXCPU,SDLM_RXD10,SDLM_RXD12,SDLM_RXD14,SDLM_RXD16)
-esym(14,SDLM_RXD18,SDLM_RXD110,SDLM_RXCNTB,SDLM_SOFPTR)
//+---------+
//|   IAI   |
//+---------+
-esym(14,FINT0CSP,FINT0ADDR,FINT1CSP,FINT1ADDR)
-esym(14,BNKSEL0,BNKSEL1,BNKSEL2,BNKSEL3)
-esym(14,SRCP0,DSTP0,SRCP1,DSTP1,SRCP2,DSTP2,SRCP3,DSTP3)
-esym(14,SRCP4,DSTP4,SRCP5,DSTP5,SRCP6,DSTP6,SRCP7,DSTP7)
-esym(14,PECSEG0,PECSEG1,PECSEG2,PECSEG3,PECSEG4,PECSEG5,PECSEG6,PECSEG7)
//+---------+
//|   EBC   |
//+---------+
-esym(14,EBCMOD0,EBCMOD1,TCONCSMM,TCONCSSM)
-esym(14,TCONCS0,FCONCS0,TCONCS1,FCONCS1,ADDRSEL1)
-esym(14,TCONCS2,FCONCS2,ADDRSEL2,TCONCS3,FCONCS3,ADDRSEL3)
-esym(14,TCONCS4,FCONCS4,ADDRSEL4,TCONCS5,FCONCS5,ADDRSEL5)
-esym(14,TCONCS6,FCONCS6,ADDRSEL6,TCONCS7,FCONCS7,ADDRSEL7)

//#====================================================================================#
//|         Following registers added for using with XC161 or XC167                    |
//#====================================================================================#

//+-----------------+
//|   ASC1 module   |
//+-----------------+
-esym(14,ASC1_TXFCON,ASC1_RXFCON,ASC1_ABSTAT,ASC1_FSTAT)
-esym(14,ASC1_ABCON,ASC1_ABCON_ABEN,ASC1_ABCON_AUREN,ASC1_ABCON_ABSTEN)
-esym(14,ASC1_ABCON_ABDETEN,ASC1_ABCON_FCDETEN,ASC1_ABCON_TXINV,ASC1_ABCON_RXINV)
-esym(14,ASC1_PMW,ASC1_TBUF,ASC1_RBUF,ASC1_BG,ASC1_FDV)
-esym(14,ASC1_CON,ASC1_CON_STP,ASC1_CON_REN,ASC1_CON_PEN,ASC1_CON_FEN,ASC1_CON_OEN)
-esym(14,ASC1_CON_PE,ASC1_CON_FE,ASC1_CON_OE,ASC1_CON_S0FDE,ASC1_CON_ODD)
-esym(14,ASC1_CON_BRS,ASC1_CON_LB,ASC1_CON_R,ASC1_ID)
//+-----------------+
//|   CC1 and CC2   |
//+-----------------+
-esym(14,CC1_PISEL,CC2_PISEL)
//+--------------+
//|   CERBERUS   |
//+--------------+
-esym(14,RWDATA,IOSR)
//+-----------+
//|   GPT12   |
//+-----------+
-esym(14,GPT12E_PISEL)
//+--------------------------------+
//|   Interrupt Control module 2   |
//+--------------------------------+
-esym(14,ASC1_TBIC,ASC1_TBIC_IE,ASC1_TBIC_IR,ASC1_TBIC_GPX)
-esym(14,ASC1_TIC,ASC1_TIC_IE,ASC1_TIC_IR,ASC1_TIC_GPX)
-esym(14,IIC_DIC,IIC_DIC_IE,IIC_DIC_IR,IIC_DIC_GPX)
-esym(14,ASC1_RIC,ASC1_RIC_IE,ASC1_RIC_IR,ASC1_RIC_GPX)
-esym(14,IIC_PEIC,IIC_PEIC_IE,IIC_PEIC_IR,IIC_PEIC_GPX)
-esym(14,ASC1_EIC,ASC1_EIC_IE,ASC1_EIC_IR,ASC1_EIC_GPX)
-esym(14,ASC1_ABIC,ASC1_ABIC_IE,ASC1_ABIC_IR,ASC1_ABIC_GPX)
//+----------+
//|   OCDS   |
//+----------+
-esym(14,DTIDR,DCMPSP,DCMPDP,DTREVT,DEXEVT,DSWEVT,CMADR,CMCTR,DBGSR)
//+-------------+
//|   PORTS 2   |
//+-------------+
-esym(14,POCON2,POCON6,POCON7)
-esym(14,ALTSEL0P1H,ALTSEL0P1H_P0,ALTSEL0P1H_P1,ALTSEL0P1H_P2,ALTSEL0P1H_P3)
-esym(14,ALTSEL0P1H_P4,ALTSEL0P1H_P5,ALTSEL0P1H_P6,ALTSEL0P1H_P7)
-esym(14,ALTSEL0P3_P0)
-esym(14,ALTSEL0P6,ALTSEL0P6_P0,ALTSEL0P6_P1,ALTSEL0P6_P2,ALTSEL0P6_P3)
-esym(14,ALTSEL0P6_P4,ALTSEL0P6_P5,ALTSEL0P6_P6,ALTSEL0P6_P7)
-esym(14,ALTSEL0P7,ALTSEL0P7_P4,ALTSEL0P7_P5,ALTSEL0P7_P6,ALTSEL0P7_P7)
-esym(14,ALTSEL1P7,ALTSEL1P7_P4,ALTSEL1P7_P5,ALTSEL1P7_P6,ALTSEL1P7_P7)
-esym(14,ALTSEL0P2,ALTSEL0P2_P8,ALTSEL0P2_P9)
-esym(14,ALTSEL0P2_P10,ALTSEL0P2_P11,ALTSEL0P2_P12,ALTSEL0P2_P13,ALTSEL0P2_P14,ALTSEL0P2_P15)
-esym(14,ODP2,ODP2_P8,ODP2_P9,ODP2_P10,ODP2_P11,ODP2_P12,ODP2_P13,ODP2_P14,ODP2_P15)
-esym(14,PICON_P2HIN,PICON_P6LIN,PICON_P7LIN)
-esym(14,ODP6,ODP6_P0,ODP6_P1,ODP6_P2,ODP6_P3,ODP6_P4,ODP6_P5,ODP6_P6,ODP6_P7)
-esym(14,ODP7,ODP7_P4,ODP7_P5,ODP7_P6,ODP7_P7)
-esym(14,P5_P8,P5_P9,P5DIDIS_P8,P5DIDIS_P9)
-esym(14,P20_P2,DP20_P2)
-esym(14,P2,P2_P8,P2_P9,P2_P10,P2_P11,P2_P12,P2_P13,P2_P14,P2_P15)
-esym(14,DP2,DP2_P8,DP2_P9,DP2_P10,DP2_P11,DP2_P12,DP2_P13,DP2_P14,DP2_P15)
-esym(14,P3_P0)
-esym(14,P6,P6_P0,P6_P1,P6_P2,P6_P3,P6_P4,P6_P5,P6_P6,P6_P7)
-esym(14,DP6,DP6_P0,DP6_P1,DP6_P2,DP6_P3,DP6_P4,DP6_P5,DP6_P6,DP6_P7)
-esym(14,P7,P7_P4,P7_P5,P7_P6,P7_P7,DP7,DP7_P4,DP7_P5,DP7_P6,DP7_P7)
//+------------------+
//|   RTC module 2   |
//+------------------+
-esym(14,RTC_ISNCH,RTC_CONH,RTC_IDH)
//+-----------+
//|   SCU 2   |
//+-----------+
-esym(14,SYSCON3_ASC1DIS,SYSCON3_I2CDIS,SYSCON3_SDLMDIS,EMUCON,TSTMOD)
//+-----------------------+
//|   CCU6 module stuff   |
//+-----------------------+
-esym(14,CCU6_IC,CCU6_IC_IE,CCU6_IC_IR,CCU6_IC_GPX)
-esym(14,CCU6_EIC,CCU6_EIC_IE,CCU6_EIC_IR,CCU6_EIC_GPX)
-esym(14,CCU6_T12IC,CCU6_T12IC_IE,CCU6_T12IC_IR,CCU6_T12IC_GPX)
-esym(14,CCU6_T13IC,CCU6_T13IC_IE,CCU6_T13IC_IR,CCU6_T13IC_GPX)

-esym(14,CCU6_PISEL,CCU6_ID,CCU6_T12,CCU6_T12PR,CCU6_T12DTC)
-esym(14,CCU6_CC60R,CCU6_CC61R,CCU6_CC62R,CCU6_CC60SR,CCU6_CC61SR,CCU6_CC62SR)
-esym(14,CCU6_TCTR4,CCU6_CMPSTAT,CCU6_CMPMODIF)
-esym(14,CCU6_TCTR0,CCU6_TCTR2,CCU6_T13,CCU6_T13PR,CCU6_CC63R,CCU6_CC63SR)
-esym(14,CCU6_MODCTR,CCU6_TRPCTR,CCU6_PSLR,CCU6_T12MSEL,CCU6_MCMOUTS,CCU6_MCMOUT,CCU6_MCMCTR)
-esym(14,CCU6_IS,CCU6_ISS,CCU6_ISR,CCU6_INP,CCU6_IEN)
//+-----------------------------------------------------------------------+
//|   It seems that this are really multiple defined in the header file,  |
//|   so I decided to supress  message 31                                 |
//+-----------------------------------------------------------------------+
-esym(31,ALTSEL0P1H)
-esym(31,ALTSEL0P1H_P0,ALTSEL0P1H_P1,ALTSEL0P1H_P2,ALTSEL0P1H_P3)
-esym(31,ALTSEL0P1H_P4,ALTSEL0P1H_P5,ALTSEL0P1H_P6,ALTSEL0P1H_P7)

//------------------------------------------------------------------------------------------

//  The following functions exhibit variable return modes.
//  That is, they may equally-usefully be called for a value
//  as called just for their effects.  Accordingly we inhibit
//  Warning 534 for these functions.
//  Feel free to add to or subtract from this list.

-esym(534,memcpy,memmove,memset,strncat,strncpy)
-esym(534,printf,putchar,puts,scanf,sprintf,sscanf,strcat,strcpy)

-emacro(413,offsetof)  // use of NULL pointer creates a stir
-emacro(545,offsetof)  // addressing an array member is OK
//------------------------------------------------------------------------------------------
//                                added additional
//------------------------------------------------------------------------------------------
-elib(14)
-t4                     // Tabulator step is 4  - default
-e716                   // Supress Info 716 for while(1) ... instead of  for(;;)
-e725                   // Supress Info 725 'Expected positive indentation from line xxx'
-e525                   // Supress Warning 525 'Negative indentation from line xxx'
-u                      // Unit checkout
//------------------------------------------------------------------------------------------
//      Hint !
//      It can be usefully to do the following with(for) your interrupt functions:
//
/*  //lint -save -e20 -e745 -e10
        void NMI_Trap(void) interrupt NMIIRQ=NMI_TRAP
                {
                NMI_SWITCH_PRESSED=1;
                TFR=0;
                }
    //lint -restore

        This causes lint to suppress some error messages, which are definitely
        wrong at these functions, since the IDE requires such a syntax

        +----------------------------------------------------------------+
        |   Stefan Fricke                               RUTRONIK  GmbH   |
        |   FAE Microcntroller                          17.09.2003       |
        |   Techn. support / Development tools                           |
        +----------------------------------------------------------------+

        Feel free to use and/or modify !!
*/
